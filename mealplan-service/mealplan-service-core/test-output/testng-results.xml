<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-29T16:24:34 CET" name="MealPlanServiceTestSuite" finished-at="2024-03-29T16:24:42 CET" duration-ms="7702">
    <groups>
    </groups>
    <test started-at="2024-03-29T16:24:34 CET" name="ClientService" finished-at="2024-03-29T16:24:42 CET" duration-ms="7702">
      <class name="com.fithub.services.mealplan.test.suites.ClientServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:34 CET" name="springTestContextBeforeTestClass" finished-at="2024-03-29T16:24:34 CET" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:34 CET" name="springTestContextPrepareTestInstance" finished-at="2024-03-29T16:24:39 CET" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="4599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:39 CET" name="springTestContextBeforeTestMethod" finished-at="2024-03-29T16:24:41 CET" duration-ms="1850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fithub.services.mealplan.test.suites.ClientServiceTest.testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:41 CET" name="beforeMethod" finished-at="2024-03-29T16:24:42 CET" duration-ms="779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan()[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:42 CET" name="testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan" finished-at="2024-03-29T16:24:42 CET" duration-ms="283" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[
expected: MealPlanResponse(id=1, clientId=1, modified=2024-03-14T19:13, modifiedBy=1)
 but was: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: 
expected: MealPlanResponse(id=1, clientId=1, modified=2024-03-14T19:13, modifiedBy=1)
 but was: null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at com.fithub.services.mealplan.test.suites.ClientServiceTest.testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan(ClientServiceTest.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:258)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)
at org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:656)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:42 CET" name="springTestContextAfterTestMethod" finished-at="2024-03-29T16:24:42 CET" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fithub.services.mealplan.test.suites.ClientServiceTest.testGetMealPlan_ValidClientIdIsProvided_ReturnsMealPlan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:com.fithub.services.mealplan.test.suites.ClientServiceTest@9ef8eb7]" started-at="2024-03-29T16:24:42 CET" name="springTestContextAfterTestClass" finished-at="2024-03-29T16:24:42 CET" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fithub.services.mealplan.test.suites.ClientServiceTest -->
    </test> <!-- ClientService -->
  </suite> <!-- MealPlanServiceTestSuite -->
</testng-results>
